# .github/workflows/ci.yml

name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
      name: Build and analyze
      runs-on: ubuntu-latest
    
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - uses: SonarSource/sonarqube-scan-action@v5
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        # If you wish to fail your job when the Quality Gate is red, uncomment the
        # following lines. This would typically be used to fail a deployment.
        # - uses: SonarSource/sonarqube-quality-gate-action@v1
        #   timeout-minutes: 5
        #   env:
        #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' 

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm install

      # Step 4: Check code formatting with Prettier
      - name: Check Code Formatting
        run: npm run format:check

      # Step 5: Lint the code with ESLint
      - name: Run ESLint
        run: npm run lint:check

      # Step 6: Build the project
      - name: Build
        run: npm run build

      # Step 7: Run tests with coverage
      - name: Run Tests
        run: npm run test -- --coverage

      # Step 8: Validate Commit Messages (Conventional Commits)
      - name: Lint Commit Messages
        run: |
          # Fetch the base SHA of the PR
          BASE_SHA=$(git merge-base origin/main HEAD)
          # Run Commitlint on the commit range from base to HEAD
          npx commitlint --from=$BASE_SHA --to=HEAD
